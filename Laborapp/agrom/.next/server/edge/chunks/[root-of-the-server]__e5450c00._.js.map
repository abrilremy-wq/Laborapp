{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/Laborapp/src/middleware.ts"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\nimport { NextResponse, type NextRequest } from 'next/server'\n\nexport async function middleware(request: NextRequest) {\n  let supabaseResponse = NextResponse.next({\n    request,\n  })\n\n  const supabase = createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return request.cookies.getAll()\n        },\n        setAll(cookiesToSet) {\n          cookiesToSet.forEach(({ name, value, options }) => request.cookies.set(name, value))\n          supabaseResponse = NextResponse.next({\n            request,\n          })\n          cookiesToSet.forEach(({ name, value, options }) =>\n            supabaseResponse.cookies.set(name, value, options)\n          )\n        },\n      },\n    }\n  )\n\n  // IMPORTANT: Avoid writing any logic between createServerClient and\n  // supabase.auth.getUser(). A simple mistake could make it very hard to debug\n  // issues with users being randomly logged out.\n\n  const {\n    data: { user },\n  } = await supabase.auth.getUser()\n\n  // Protected routes\n  const protectedRoutes = ['/onboarding', '/profile', '/my', '/messages']\n  const authRoutes = ['/auth/login', '/auth/register', '/auth/reset']\n\n  const isProtectedRoute = protectedRoutes.some(route => \n    request.nextUrl.pathname.startsWith(route)\n  )\n  const isAuthRoute = authRoutes.some(route => \n    request.nextUrl.pathname.startsWith(route)\n  )\n\n  // Redirect to login if accessing protected route without auth\n  if (isProtectedRoute && !user) {\n    const url = request.nextUrl.clone()\n    url.pathname = '/auth/login'\n    return NextResponse.redirect(url)\n  }\n\n  // Redirect to home if accessing auth routes while logged in\n  if (isAuthRoute && user) {\n    const url = request.nextUrl.clone()\n    url.pathname = '/'\n    return NextResponse.redirect(url)\n  }\n\n  // Redirect to onboarding if user exists but no profile\n  if (user && request.nextUrl.pathname === '/') {\n    const { data: profile } = await supabase\n      .from('users_public')\n      .select('id')\n      .eq('id', user.id)\n      .single()\n\n    if (!profile) {\n      const url = request.nextUrl.clone()\n      url.pathname = '/onboarding'\n      return NextResponse.redirect(url)\n    }\n  }\n\n  return supabaseResponse\n}\n\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     * Feel free to modify this pattern to include more paths.\n     */\n    '/((?!_next/static|_next/image|favicon.ico|.*\\\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)',\n  ],\n}\n\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AACA;AAAA;;;AAEO,eAAe,WAAW,OAAoB;IACnD,IAAI,mBAAmB,4MAAY,CAAC,IAAI,CAAC;QACvC;IACF;IAEA,MAAM,WAAW,IAAA,mNAAkB,EACjC,QAAQ,GAAG,CAAC,wBAAwB,EACpC,QAAQ,GAAG,CAAC,6BAA6B,EACzC;QACE,SAAS;YACP;gBACE,OAAO,QAAQ,OAAO,CAAC,MAAM;YAC/B;YACA,QAAO,YAAY;gBACjB,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAK,QAAQ,OAAO,CAAC,GAAG,CAAC,MAAM;gBAC7E,mBAAmB,4MAAY,CAAC,IAAI,CAAC;oBACnC;gBACF;gBACA,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,iBAAiB,OAAO,CAAC,GAAG,CAAC,MAAM,OAAO;YAE9C;QACF;IACF;IAGF,oEAAoE;IACpE,6EAA6E;IAC7E,+CAA+C;IAE/C,MAAM,EACJ,MAAM,EAAE,IAAI,EAAE,EACf,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;IAE/B,mBAAmB;IACnB,MAAM,kBAAkB;QAAC;QAAe;QAAY;QAAO;KAAY;IACvE,MAAM,aAAa;QAAC;QAAe;QAAkB;KAAc;IAEnE,MAAM,mBAAmB,gBAAgB,IAAI,CAAC,CAAA,QAC5C,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IAEtC,MAAM,cAAc,WAAW,IAAI,CAAC,CAAA,QAClC,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IAGtC,8DAA8D;IAC9D,IAAI,oBAAoB,CAAC,MAAM;QAC7B,MAAM,MAAM,QAAQ,OAAO,CAAC,KAAK;QACjC,IAAI,QAAQ,GAAG;QACf,OAAO,4MAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,4DAA4D;IAC5D,IAAI,eAAe,MAAM;QACvB,MAAM,MAAM,QAAQ,OAAO,CAAC,KAAK;QACjC,IAAI,QAAQ,GAAG;QACf,OAAO,4MAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,uDAAuD;IACvD,IAAI,QAAQ,QAAQ,OAAO,CAAC,QAAQ,KAAK,KAAK;QAC5C,MAAM,EAAE,MAAM,OAAO,EAAE,GAAG,MAAM,SAC7B,IAAI,CAAC,gBACL,MAAM,CAAC,MACP,EAAE,CAAC,MAAM,KAAK,EAAE,EAChB,MAAM;QAET,IAAI,CAAC,SAAS;YACZ,MAAM,MAAM,QAAQ,OAAO,CAAC,KAAK;YACjC,IAAI,QAAQ,GAAG;YACf,OAAO,4MAAY,CAAC,QAAQ,CAAC;QAC/B;IACF;IAEA,OAAO;AACT;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH"}}]
}